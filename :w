use namenode_server::NamenodeServer;
use proto::generated::client_namenode::client_name_node_server::{ClientNameNode, ClientNameNodeServer};

mod namenode_state;
mod namenode_server;
mod datanode_selection_policy;
mod data_structure;
mod chunk_generator;

#[tokio::main]
async fn main()->Result<(), _> {
    let args: Vec<String> = env::args().collect();
    let grpc_port = if args.len() > 1 {
        args[1].clone()
    } else {
        "3000".to_owned()
    };
    let addr = format!("127.0.0.1:{}", grpc_port).parse()?;
    println!("Starting the grpc server on address : {addr}");
    // first we will start grpc server
    Server::builder()
        .add_service(ClientNameNodeServer::new(NamenodeServer::new()))
        .serve(addr).await?.;
    Ok(())

}
